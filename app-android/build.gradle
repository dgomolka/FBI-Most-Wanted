plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "com.google.devtools.ksp"
    id "org.jetbrains.kotlin.plugin.serialization"
}

android {
    compileSdk compile_sdk_version

    defaultConfig {
        applicationId application_id
        minSdk min_sdk_version
        targetSdk target_sdk_version
        versionCode app_version_code
        versionName app_version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility compile_java_version
        targetCompatibility compile_java_version
    }
    kotlinOptions {
        jvmTarget = compile_jvm_target
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = compose_kotlin_compiler_extension_version
    }
    sourceSets {
        // allows android studio to see ksp generated code
        debug.java {
            srcDir("build/generated/ksp/debug/kotlin")
        }
        release.java {
            srcDir("build/generated/ksp/release/kotlin")
        }
        testDebug.java {
            srcDir("build/generated/ksp/debugUnitTest/kotlin")
        }
        androidTestDebug.java {
            srcDir("build/generated/ksp/debugAndroidTest/kotlin")
        }
        // share code between unit and android tests
        test.java {
            srcDir("src/commonTest/java")
        }
    }
}

ksp {
    arg("me.tatarka.inject.dumpGraph", "true")
    arg("me.tatarka.inject.enableJavaxAnnotations", "true")
}

dependencies {
    api project(':ui-android')
    api project(":domain")
    api project(":data")
    api project(":presentation")

    implementation "androidx.multidex:multidex:$androidx_multidex_version"
    implementation "androidx.activity:activity-compose:$activity_compose_version"

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinx_serialization_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "javax.inject:javax.inject:$javax_inject_version"

    ksp("me.tatarka.inject:kotlin-inject-compiler-ksp:$kotlin_inject_version")
    implementation "me.tatarka.inject:kotlin-inject-runtime:$kotlin_inject_version"
}
